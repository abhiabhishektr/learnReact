>> Createing With JSX

import React from "react";
import ReactDom from "react-dom/client";

//React.createElement ==> ReactElement-JS Object ==> HTMLElement(render)

const heading = React.createElement("h1", { id: "heading" }, "Namaste Kerala");

//JSX - HTML - like or XML - like syntax

//JSX ==> Babel transpiles it to React.createElement ==> ReactElement -JS Object ==> HTMLElement(render)

const jsxHeading = <h1 id="heading">Namaste Kerala Using JSX</h1>;

const root = ReactDom.createRoot(document.getElementById("root"));

root.render(jsxHeading);

..................................................................


 >> React Functional Components

 import React from "react";
import ReactDom from "react-dom/client";

// React Element
const Title = ()=> (
  <h1 id="heading" tabIndex="5">
    Namaste Kerala Using JSX
  </h1>
);

// Component Compositions 

const HeadingComponent = () =>  (
    <div id="contanier">
      <Title />
      <h1>Namaste React Functional Component</h1>;
    </div>
  );

const root = ReactDom.createRoot(document.getElementById("root"));

root.render(<HeadingComponent />);

..................................................................

 >> Component Composition 

// React Element

const Title = ()=> (
  <h1 id="heading" tabIndex="5">
    Namaste Kerala Using JSX
  </h1>
);

// Component Compositions 

const HeadingComponent = () =>  (
    <div id="contanier">
      <Title />
      <h1>Namaste React Functional Component</h1>;
    </div>
  );

..................................................................

// Writing JS inside the JSX

const number = 10000
const HeadingComponent = () =>  (
    <div id="contanier">
     <h2> {number}</h2> //The value will show here
      <h1>Namaste React Functional Component</h1>;
    </div>
  );


  ..................................................................

// React Element
const Title = (
  <h1 id="heading" tabIndex="5">
    Namaste Kerala Using JSX
  </h1>
);

// Adding React element inside the component
const number = 10000
const HeadingComponent = () =>  (
    <div id="contanier">
      {Title}
     <h2> {number}</h2> //The value will show here
      <h1>Namaste React Functional Component</h1>;
    </div>
  );

    ..................................................................

// Adding React element inside the React Element

const elem = <span>React Element </span>

const Title = (
  <h1 id="heading" tabIndex="5">
    {elem}
    Namaste Kerala Using JSX
  </h1>
);
    ..................................................................

// We can add to Render in two Methods


const Title = ()=>(
  <h1 id="heading" tabIndex="5">
    Namaste Kerala Using JSX
  </h1>
);
const number = 10000
const HeadingComponent = () =>  (
    <div id="contanier">
      
      <Title></Title> //One  Method
      <Title/> //Second Method 

      <h1>Namaste React Functional Component</h1>;
    </div>
  );

    ..................................................................
    
// React  Functional Components  can called
// inside other components as functions

const Title = () => (
  <h1 id="heading" tabIndex="5">
    Namaste Kerala Using JSX
  </h1>
);
const number = 10000;
const HeadingComponent = () => (
  <div id="contanier">

    {Title()} //Components functions can be called
    
    <h1>Namaste React Functional Component</h1>;
  </div>
);
    ..................................................................
    First Planning And then takes Swiggy API and made some cards with inforamtion
    ..................................................................

import React from "react";
import ReactDom from "react-dom/client";

//Planning Our Resturant things

/**
 * Planning Components
 *
 * Header
 *  - Logo
 *  - Nav items
 * Body
 *  -Search
 *  -RestaruntCOntaier
 *    -RestaurantCards
 * Footer
 *  - Links
 *  - Copyright
 *
 */
const Header = () => {
  return (
    <div className="header">
      <div className="logo-container">
        <img
          className="logo"
          src="https://i.fbcd.co/products/original/d32491363c1d52ac365372cd2df281d6a7cf44f8873fa0900cd4a78a1528628c.jpg"
        />
      </div>
      <div className="nav-items">
        <ul>
          <li>Home</li>
          <li>About Us</li>
          <li>Contact</li>
          <li>Cart</li>
        </ul>
      </div>
    </div>
  );
};

const resList = [
  {
    info: {
      id: "576145",
      name: "Domino's Pizza",
      cloudinaryImageId: "092e58460657922e098a8afd5db838fe",
      locality: "Green Nagar",
      areaName: "Karaparamba",
      costForTwo: "₹400 for two",
      cuisines: ["Pizzas", "Italian", "Pastas", "Desserts"],
      avgRating: 4.5,
      parentId: "2456",
      avgRatingString: "4.5",
      totalRatingsString: "500+",
      sla: {
        deliveryTime: 30,
        serviceability: "SERVICEABLE",
        slaString: "30 mins",
        iconType: "ICON_TYPE_EMPTY",
      },
      availability: {
        nextCloseTime: "2024-02-26 00:59:00",
        opened: true,
      },
      badges: {
        textExtendedBadges: [
          {
            iconId: "Ratnesh_Badges/free%20del%20icon.png",
            shortDescription: "Free Delivery",
            fontColor: "#7E808C",
          },
        ],
      },
      isOpen: true,
      type: "F",
      badgesV2: {
        entityBadges: {
          imageBased: {},
          textBased: {},
          textExtendedBadges: {
            badgeObject: [
              {
                attributes: {
                  description: "",
                  fontColor: "#7E808C",
                  iconId: "Ratnesh_Badges/free%20del%20icon.png",
                  shortDescription: "Free Delivery",
                },
              },
            ],
          },
        },
      },
      aggregatedDiscountInfoV3: {
        header: "30% OFF",
        subHeader: "UPTO ₹75",
      },
      differentiatedUi: {
        displayType: "ADS_UI_DISPLAY_TYPE_ENUM_DEFAULT",
        differentiatedUiMediaDetails: {
          mediaType: "ADS_MEDIA_ENUM_IMAGE",
          lottie: {},
          video: {},
        },
      },
      reviewsSummary: {},
      displayType: "RESTAURANT_DISPLAY_TYPE_DEFAULT",
      restaurantOfferPresentationInfo: {},
    },
    analytics: {},
    cta: {
      link: "https://www.swiggy.com/restaurants/dominos-pizza-green-nagar-karaparamba-kozhikode-576145",
      type: "WEBLINK",
    },
  },
];

const ResturantCard = (props) => {
  const {  resData } = props;
  const { name, cuisines, avgRating, costForTwo, cloudinaryImageId } =
    resData?.info;

  return (
    <div className="res-card" style={{ backgroundColor: "grey" }}>
      <img
        className="res-logo"
        alt="res-logo"
        src={
          "https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/" +
          cloudinaryImageId
        }
      />
      <h3>{name}</h3>
      <h4>{cuisines.join(",")}</h4>
      <h4>{avgRating}</h4>
      <h4>{costForTwo}</h4>
    </div>
  );
};
const Body = () => {
  return (
    <div className="body">
      <div className="search">Search</div>
      <div className="res-container">
        
        {resList.map((restaurant) => (
          <ResturantCard key={restaurant.info.id} resData={restaurant} />
        ))}
      </div>
    </div>
  );
};
const AppLayout = () => {
  return (
    <div className="app">
      <Header />
      <Body />
    </div>
  );
};

const root = ReactDom.createRoot(document.getElementById("root"));

root.render(<AppLayout />);

...............................................................................................................
                                       HOOKS
.............................................................................................................

import {useState} from "react"
 


//Local State Variable - Super Powerful variable

  const [listOfRestaurant] = useState([]) --- Inside this (we can add the default values in it)

//Noramal JS Variable 

  let listOfRestaurant =[]


  ..............................................

    ->  React uses Reconcilation Algorithm (also known as REACT FIBER)

    We have Dom of List of restaurants
    in that res - container we have 7 cards and then we filter 3 cards 
    so there create a virtual DOM


    const Body = () => {
  //Local State Variable - Super Powerful variable
  const [listOfRestaurant, setListOfRestaurant] = useState(resList);
  //Noramal JS Variable
  // let listOfRestaurant =[]
  return (
    <div className="body">
      <div className="filter">
        <button
          className="filter-btn"
          onClick={() => {
            const filteredList = listOfRestaurant.filter(
              (res) => res.info.avgRating > 4.4
            );
            setListOfRestaurant(filteredList);
          }}
        >
          Top Rated Resturants
        </button>
      </div>
      <div className="res-container">
        {listOfRestaurant.map((restaurant) => (
          <ResturantCard key={restaurant.info.id} resData={restaurant} />
        ))}
      </div>
    </div>
  );
};
export default Body;


 //Conditional Rendering
  // if(listOfRestaurant.length ===0){
  //   return <Shimmer/>
  // }




>>>>>>>>>>>>>> Createing Routes  <<<<<<<<<<<<<<<

import { createBrowserRouter, RouterProvider} from "react-router-dom";

const appRouter = createBrowserRouter([
  {
    path: "/",
    element: <AppLayout />,
  },
  {
    path: "/about",
    element: <About />,
  },
]);

